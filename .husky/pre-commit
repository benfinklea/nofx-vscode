#!/bin/sh

# Pre-commit hook for NofX VS Code Extension
# Validates build before allowing commits

echo "üîç Running pre-commit validation..."

# Run TypeScript compilation
echo "üì¶ Compiling TypeScript..."
npm run compile || {
    echo "‚ùå TypeScript compilation failed. Please fix errors before committing."
    exit 1
}

# Validate build output
echo "‚úÖ Validating build..."
if [ "$OS" = "Windows_NT" ] || [ "$(uname -s | grep -c MINGW)" -ne 0 ] || [ "$(uname -s | grep -c CYGWIN)" -ne 0 ]; then
    echo "‚ö†Ô∏è  Windows detected. Checking for PowerShell support..."
    
    # Try PowerShell first (preferred for Windows)
    if command -v pwsh >/dev/null 2>&1; then
        echo "   Using PowerShell for validation..."
        pwsh -NoProfile -File scripts/validate-build.ps1 || {
            echo "‚ùå Build validation failed. Please fix errors before committing."
            exit 1
        }
    # Try powershell.exe if pwsh not available
    elif command -v powershell >/dev/null 2>&1; then
        echo "   Using Windows PowerShell for validation..."
        powershell -NoProfile -File scripts/validate-build.ps1 || {
            echo "‚ùå Build validation failed. Please fix errors before committing."
            exit 1
        }
    # Fallback to npm script if in Git Bash/MINGW with bash available
    elif [ -n "$BASH_VERSION" ]; then
        echo "   Using npm script validation (Git Bash detected)..."
        npm run validate:build 2>/dev/null || {
            echo "‚ö†Ô∏è  Build validation skipped - shell support missing"
            echo "   Please ensure out/extension.js exists and is valid"
        }
    else
        echo "‚ö†Ô∏è  Build validation skipped - no compatible shell found"
        echo "   Please ensure out/extension.js exists and is valid"
    fi
else
    ./scripts/validate-build.sh --quiet || {
        echo "‚ùå Build validation failed. Please fix errors before committing."
        exit 1
    }
fi

# Run quick tests for command registration (if available)
echo "üß™ Running command registration tests..."
if [ -f "src/test/unit/commands/CommandRegistration.test.ts" ]; then
    npm run test:commands 2>/dev/null || {
        echo "‚ö†Ô∏è  Command registration tests failed. Continuing anyway..."
    }
else
    echo "‚ö†Ô∏è  Command registration tests not yet available. Skipping..."
fi

# Check for console.log statements (handles spaces in paths)
echo "üîç Checking for console.log statements..."
if grep -R --include='*.ts' --exclude-dir='test' -l "console\.log" src/ >/dev/null 2>&1; then
    echo "‚ö†Ô∏è  Warning: console.log statements found in source code"
    echo "   Consider using the LoggingService instead"
fi

echo "‚úÖ Pre-commit validation passed!"
